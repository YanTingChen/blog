<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title><![CDATA[ESLint學習]]></title>
      <url>/2018/01/10/ESLint/</url>
      <content type="html"><![CDATA[<p>ESLint是個JS風格規定套件，主要用於專案合作中為避免低級的Bug、產出風格統一且高品質的代碼，會預先制定編碼規範。ESLint幫助我們檢查寫Javascript時的語法錯誤。我個人是滿需要的，因為常常會忘記加上()或變數寫錯之類的…，不過在開始前要先安裝Javascript ES6的環境。</p>
<p>如果要使用Javascript ES6的話，就必須先安裝<a href="http://babeljs.io/" target="_blank" rel="noopener">babel</a>。而這套件竟然還有歌曲(? 太神了吧，我使用的方式是直接安裝在project內部(但全局我也有裝)，而我使用的Node.js版本是7.7.3所以可以直接安裝<a href="https://www.npmjs.com/package/babel-preset-es6-node6" target="_blank" rel="noopener">babel-preset-es6-node6</a>而不是<a href="https://www.npmjs.com/package/babel-preset-es2015" target="_blank" rel="noopener">babel-preset-es2015</a>(es2015表示ES6轉換器，stage-3表示ES7轉換器)。 </p>
<h3 id="安裝Babel"><a href="#安裝Babel" class="headerlink" title="安裝Babel"></a>安裝Babel</h3><pre class="line-numbers language-bash"><code class="language-bash">$ <span class="token function">npm</span> <span class="token function">install</span> -g --save-dev babel-cli babel-preset-env babel-polyfill babel-preset-es6-node6 babel-preset-stage-3
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>安裝完後的<em>package.json</em> 檔案<br><img src="https://i.loli.net/2018/01/11/5a57802f887e0.png" alt="Alt text" title="package.json"><br>在專案中新建 <em>.babelrc檔案</em>，並輸入下面那段語法，如果你是安裝babel-preset-es2015，請自己把es6-node6換成es2015。</p>
<pre class="line-numbers language-bash"><code class="language-bash">$ <span class="token function">touch</span> .babelrc
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<blockquote>
<p>.babelrc檔案</p>
</blockquote>
<pre class="line-numbers language-json"><code class="language-json"><span class="token punctuation">{</span>
    presets<span class="token operator">:</span> <span class="token punctuation">[</span> <span class="token string">"es6-node6"</span><span class="token punctuation">,</span> <span class="token string">"stage-3"</span> <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>接下來只要直接執行 <em>babel-node your-file.js</em> 就可以成功執行了。但我的主要目的還沒達到，接著繼續安裝<a href="https://eslint.org/" target="_blank" rel="noopener">ESLint</a> &amp; <a href="https://github.com/airbnb/javascript/tree/master/packages/eslint-config-airbnb-base" target="_blank" rel="noopener">airbnb-javascript-rules</a>!</p>
<hr>
<h3 id="安裝-ESLint-和-airbnb-javascript-rules"><a href="#安裝-ESLint-和-airbnb-javascript-rules" class="headerlink" title="安裝 ESLint 和 airbnb-javascript-rules"></a>安裝 ESLint 和 airbnb-javascript-rules</h3><pre class="line-numbers language-bash"><code class="language-bash">$ <span class="token function">npm</span> <span class="token function">install</span> eslint babel-eslint -g --save-dev
$ <span class="token function">npm</span> <span class="token function">install</span> eslint-config-airbnb-base eslint-plugin-import -g --save-dev
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p><img src="https://i.loli.net/2018/01/11/5a5781b3693ec.png" alt="Alt text" title="package.json"><br>在專案中新建 <em>.eslintrc檔案</em> 設定檔，並輸入下面那段語法。</p>
<pre class="line-numbers language-bash"><code class="language-bash">$ <span class="token function">touch</span> .eslintrc
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<blockquote>
<p>.eslintrc檔案</p>
</blockquote>
<pre class="line-numbers language-json"><code class="language-json"><span class="token punctuation">{</span>
  <span class="token property">"parser"</span><span class="token operator">:</span> <span class="token string">"babel-eslint"</span><span class="token punctuation">,</span>
  <span class="token property">"extends"</span><span class="token operator">:</span> <span class="token string">"airbnb-base"</span><span class="token punctuation">,</span>
  <span class="token property">"rules"</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">"semi"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">"never"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token property">"arrow-body-style"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"error"</span><span class="token punctuation">,</span> <span class="token string">"always"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token property">"no-console"</span><span class="token operator">:</span> <span class="token number">0</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token property">"env"</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">"browser"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token property">"node"</span><span class="token operator">:</span> <span class="token boolean">true</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token property">"plugins"</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token string">"import"</span>
  <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>這邊就是重點了，因為是初學所以就先看看別人的設定，然後慢慢修改，大概解說一下：</p>
<ul>
<li>parser: 指的是解析器，如果有安裝babel編譯器，就是設定<em>babel-eslint</em>。</li>
<li>extends: 設定規則設定檔，這裡使用<em>airbnb-base</em>。</li>
<li>rules: 額外的規則，像是語句結尾不用分號</li>
<li>env: 環境設定在browser或node上使用。</li>
<li>plugins: 設定插件，這裡使用<em>eslint-plugin-import</em>。</li>
</ul>
<p>接著就可以運行ESLint了!會看到非常多錯誤QAQ，但是在後面加上個<em>–fix</em> 會自動幫你解決一些排版小問題。</p>
<pre class="line-numbers language-bash"><code class="language-bash">$ eslint yourfile.js --fix
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>想要更了解的ESLint的可以看看參考資料，裡面都寫得很詳細，這篇文只是簡單實作後的紀錄。</p>
<h3 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料:"></a>參考資料:</h3><ul>
<li><a href="https://ithelp.ithome.com.tw/articles/10184924" target="_blank" rel="noopener">Day 03: ESLint - Lint工具的後起之秀</a></li>
<li><a href="http://seans.tw/2016/use-es6-es7-on-nodejs/" target="_blank" rel="noopener">使用ES6與ES7在nodejs上執行程式</a></li>
<li><a href="http://seans.tw/2016/eslint-with-airbnb/" target="_blank" rel="noopener">用eslint X Airbnb js-rules改善程式碼品質</a></li>
<li><a href="https://www.jianshu.com/p/f2f06a0e154b" target="_blank" rel="noopener">EsLint入门学习整理</a></li>
</ul>
]]></content>
      
        <categories>
            
            <category> 技術 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> ESLint </tag>
            
            <tag> javascript </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[gulp學習]]></title>
      <url>/2018/01/08/Gulp/</url>
      <content type="html"><![CDATA[<p>最近看了一些Gulp的學習文章，想說當完兵後，頭腦也空空的就來學吧。<a href="https://gulpjs.com/" target="_blank" rel="noopener">Gulp</a>使用Node.js的streams串流，而我想要學習Gulp的原因很簡單，就是我想要修改程式後不按F5啦(流程自動化)!但是他的優點好像不只這樣，像是監聽檔案、壓縮圖片等等，但是優點太多人說過了我就不說了，直接開幹吧!<br>這次主要學習的文章是<a href="https://markgoodyear.com/2014/01/getting-started-with-gulp/" target="_blank" rel="noopener">Getting started with gulp</a>這篇，但在開始之前還是要先裝個環境。來看看官方的指南!</p>
<h2 id="安裝"><a href="#安裝" class="headerlink" title="安裝"></a>安裝</h2><ol>
<li>全局安裝 CLI version：<pre class="line-numbers language-bash"><code class="language-bash">$ <span class="token function">npm</span> <span class="token function">install</span> --global gulp
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
</li>
<li>作為項目的開發依賴（devDependencies）安裝Local version：<br>確認Global和Local版本是否一樣<pre class="line-numbers language-bash"><code class="language-bash">$ <span class="token function">npm</span> <span class="token function">install</span> --save-dev gulp
$ gulp -v
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
</li>
<li><p>在項目根目錄下創建一個名為 gulpfile.js 的文件：<br>gulpfile.js是負責撰寫任務化流程的檔案</p>
<pre class="line-numbers language-bash"><code class="language-bash">$ <span class="token function">touch</span> gulpfile.js
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p> 在內部寫入引入模組並建立任務</p>
<pre class="line-numbers language-javascript"><code class="language-javascript"> <span class="token keyword">var</span> gulp <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'gulp'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

 gulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span><span class="token string">'default'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
     <span class="token comment" spellcheck="true">// 將你的默認的任務代碼放在這</span>
 <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p>運行 gulp：</p>
<pre class="line-numbers language-bash"><code class="language-bash">$ gulp
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>默認的default任務（task）將會被運行，在這裡這個任務並未做任何事情。</p>
</li>
</ol>
<h2 id="目錄結構"><a href="#目錄結構" class="headerlink" title="目錄結構"></a>目錄結構</h2><p>基本設置已經完成，在這邊先停一下，我發現要使用Gulp時，目錄結構非常重要，不然找不到檔案，所以建議檔案結構可以參考下面這個簡易的目錄。<br>可參考比較完整的<a href="https://leohxj.gitbooks.io/a-programmer-prepares/programmer-basic/directory.html" target="_blank" rel="noopener">目錄建構</a></p>
<p>├── [Project Name]<br>├──── [src]<br>├─────── [scripts]<br>├─────── [styles]<br>├─────── [images]<br>├─────── index.html<br>├──── [dist]<br>├─────── [js]<br>├─────── [css]<br>├─────── [img]<br>├─────── index.html<br>├──── gulpfile.js</p>
<p>接下來就來看看官方的API文件(gulp API docs)，非常多的API，但我這次練習不用到這麼多，主要用到<br>gulp.src(globs[, options])</p>
<blockquote>
<p>指定檔案來源</p>
</blockquote>
<p>gulp.dest(path[, options])</p>
<blockquote>
<p>檔案存檔位置</p>
</blockquote>
<p>gulp.task(name[, deps], fn)</p>
<blockquote>
<p>定義任務名稱並指定任務內容</p>
</blockquote>
<p>gulp.watch(glob [, opts], tasks)</p>
<blockquote>
<p>監聽特定檔案是否修改</p>
</blockquote>
<p>而Gulp本身的API很簡單，使用 gulp.task 定義一系列的任務，使用 gulp.src 讀取文件，使用 .pipe() 進行一系列的處理，使用 gulp.dest 輸出處理後的文件，並使用 gulp.watch 監聽文件的更改。</p>
<h2 id="開始寫gulpfile-js"><a href="#開始寫gulpfile-js" class="headerlink" title="開始寫gulpfile.js"></a>開始寫gulpfile.js</h2><p>接下來跟著教學來安裝套件學習吧。<br>安裝一些套件</p>
<pre class="line-numbers language-bash"><code class="language-bash">$ <span class="token function">npm</span> <span class="token function">install</span> gulp-ruby-sass gulp-autoprefixer gulp-cssnano gulp-jshint gulp-concat gulp-uglify gulp-imagemin gulp-notify gulp-rename gulp-livereload gulp-cache del --save-dev
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>安裝清單</p>
<blockquote>
<p>編譯 Sass（gulp-ruby-sass）<br>Autoprefixer（gulp-autoprefixer）<br>縮小化（minify）CSS（gulp-cssnano）<br>JSHint（gulp-jshint）<br>合併檔案（gulp-concat）<br>壓縮混淆 JavaScript 檔案（Uglify）（gulp-uglify）<br>壓縮圖檔（gulp-imagemin）<br>即時重整（LiveReload）（gulp-livereload）<br>快取圖片，只有變更的圖檔才會壓縮處理（gulp-cache）<br>通知更動（gulp-notify）<br>清除檔案，有個乾淨的建構環境（del）</p>
</blockquote>
<p>接著完成第一次練習用code，直接看code看到眼睛脫窗…，基本上看懂上面的清單就知道任務是怎麼執行的了!</p>
<pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token comment" spellcheck="true">//包含gulp和所有需要的插件</span>
<span class="token keyword">var</span> gulp <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'gulp'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    sass <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'gulp-ruby-sass'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    autoprefixer <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'gulp-autoprefixer'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    cssnano <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'gulp-cssnano'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    jshint <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'gulp-jshint'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    uglify <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'gulp-uglify'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    imagemin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'gulp-imagemin'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    rename <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'gulp-rename'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    concat <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'gulp-concat'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    notify <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'gulp-notify'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    cache <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'gulp-cache'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    livereload <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'gulp-livereload'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    del <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'del'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment" spellcheck="true">// Styles 編譯sass</span>
gulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span><span class="token string">'styles'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token function">sass</span><span class="token punctuation">(</span><span class="token string">'src/styles/main.scss'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> style<span class="token punctuation">:</span> <span class="token string">'expanded'</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">autoprefixer</span><span class="token punctuation">(</span><span class="token string">'last 2 version'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>gulp<span class="token punctuation">.</span><span class="token function">dest</span><span class="token punctuation">(</span><span class="token string">'dist/styles'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">rename</span><span class="token punctuation">(</span><span class="token punctuation">{</span> suffix<span class="token punctuation">:</span> <span class="token string">'.min'</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">cssnano</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>gulp<span class="token punctuation">.</span><span class="token function">dest</span><span class="token punctuation">(</span><span class="token string">'dist/styles'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">notify</span><span class="token punctuation">(</span><span class="token punctuation">{</span> message<span class="token punctuation">:</span> <span class="token string">'Styles task complete'</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment" spellcheck="true">// Scripts 拼接、簡化JS文件</span>
gulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span><span class="token string">'scripts'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> gulp<span class="token punctuation">.</span><span class="token function">src</span><span class="token punctuation">(</span><span class="token string">'src/scripts/**/*.js'</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">jshint</span><span class="token punctuation">(</span><span class="token string">'.jshintrc'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>jshint<span class="token punctuation">.</span><span class="token function">reporter</span><span class="token punctuation">(</span><span class="token string">'default'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token string">'main.js'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>gulp<span class="token punctuation">.</span><span class="token function">dest</span><span class="token punctuation">(</span><span class="token string">'dist/scripts'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">rename</span><span class="token punctuation">(</span><span class="token punctuation">{</span> suffix<span class="token punctuation">:</span> <span class="token string">'.min'</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">uglify</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>gulp<span class="token punctuation">.</span><span class="token function">dest</span><span class="token punctuation">(</span><span class="token string">'dist/scripts'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">notify</span><span class="token punctuation">(</span><span class="token punctuation">{</span> message<span class="token punctuation">:</span> <span class="token string">'Scripts task complete'</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment" spellcheck="true">// Images 壓縮圖片</span>
gulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span><span class="token string">'images'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> gulp<span class="token punctuation">.</span><span class="token function">src</span><span class="token punctuation">(</span><span class="token string">'src/images/**/*'</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">cache</span><span class="token punctuation">(</span><span class="token function">imagemin</span><span class="token punctuation">(</span><span class="token punctuation">{</span> optimizationLevel<span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span> progressive<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> interlaced<span class="token punctuation">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>gulp<span class="token punctuation">.</span><span class="token function">dest</span><span class="token punctuation">(</span><span class="token string">'dist/images'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">notify</span><span class="token punctuation">(</span><span class="token punctuation">{</span> message<span class="token punctuation">:</span> <span class="token string">'Images task complete'</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment" spellcheck="true">// 清除目的地目錄並重建檔案</span>
gulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span><span class="token string">'clean'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token function">del</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'dist/styles'</span><span class="token punctuation">,</span> <span class="token string">'dist/scripts'</span><span class="token punctuation">,</span> <span class="token string">'dist/images'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment" spellcheck="true">// 默認任務，執行styles,scripts,images這個任務</span>
gulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span><span class="token string">'default'</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">'clean'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  gulp<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token string">'styles'</span><span class="token punctuation">,</span> <span class="token string">'scripts'</span><span class="token punctuation">,</span> <span class="token string">'images'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment" spellcheck="true">// 監聽任務</span>
gulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span><span class="token string">'watch'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

  <span class="token comment" spellcheck="true">// 監聽 .scss檔案 </span>
  gulp<span class="token punctuation">.</span><span class="token function">watch</span><span class="token punctuation">(</span><span class="token string">'src/styles/**/*.scss'</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">'styles'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment" spellcheck="true">// 監聽 .js檔案 </span>
  gulp<span class="token punctuation">.</span><span class="token function">watch</span><span class="token punctuation">(</span><span class="token string">'src/scripts/**/*.js'</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">'scripts'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment" spellcheck="true">// 監聽圖片檔案</span>
  gulp<span class="token punctuation">.</span><span class="token function">watch</span><span class="token punctuation">(</span><span class="token string">'src/images/**/*'</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">'images'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment" spellcheck="true">// 建立即時重整伺服器</span>
  livereload<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment" spellcheck="true">// 監聽所有在dist/的檔案，有變更就重整</span>
  gulp<span class="token punctuation">.</span><span class="token function">watch</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'dist/**'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'change'</span><span class="token punctuation">,</span> livereload<span class="token punctuation">.</span>changed<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
]]></content>
      
        <categories>
            
            <category> 技術 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> javascript </tag>
            
            <tag> gulp </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[在Cloud9 (C9.io) 開發Hexo]]></title>
      <url>/2018/01/07/Hexo/</url>
      <content type="html"><![CDATA[<p><a href="https://c9.io/" target="_blank" rel="noopener">Cloud 9</a> 是一個開源的網路專案，它採用Node.js作為整個整合開發環境的核心，執行速度、擴充性以及操作使用都與目前眾多的開發環境相似，且啟動速度更快，更為便利。<br>簡單來說就是npm都幫你裝好了，我們先開個一般的html專案就可以了(圖一)<br><img src="https://i.loli.net/2018/01/08/5a525687c3645.png" alt="Alt text" title="圖一"></p>
<h3 id="安裝Hexo"><a href="#安裝Hexo" class="headerlink" title="安裝Hexo"></a>安裝Hexo</h3><p>接著看到下面的終端機(Terminal)，輸入下面這個指令安裝我們要使用的網誌框架</p>
<pre class="line-numbers language-bash"><code class="language-bash">$ <span class="token function">npm</span> <span class="token function">install</span> hexo-cli -g
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h3 id="建置部落格"><a href="#建置部落格" class="headerlink" title="建置部落格"></a>建置部落格</h3><p>安裝好後就讓我們建置一個新的專案，blog是你的部落格名稱喔!</p>
<pre class="line-numbers language-bash"><code class="language-bash">$ hexo init blog
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h3 id="安裝Git"><a href="#安裝Git" class="headerlink" title="安裝Git"></a>安裝Git</h3><p>接著進去專案裡面，安裝Git，好讓你能發布</p>
<pre class="line-numbers language-bash"><code class="language-bash">$ <span class="token function">cd</span> blog
$ <span class="token function">npm</span> <span class="token function">install</span> hexo-deployer-git --save
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<h3 id="啟動"><a href="#啟動" class="headerlink" title="啟動"></a>啟動</h3><p>最後就直接啟動吧!</p>
<pre class="line-numbers language-bash"><code class="language-bash">$ hexo server -i <span class="token variable">$IP</span> -p <span class="token variable">$PORT</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h2 id="超級懶人包"><a href="#超級懶人包" class="headerlink" title="超級懶人包"></a>超級懶人包</h2><pre class="line-numbers language-bash"><code class="language-bash">$ <span class="token function">npm</span> <span class="token function">install</span> -g hexo-cli
$ hexo init blog
$ <span class="token function">cd</span> blog
$ <span class="token function">npm</span> <span class="token function">install</span> hexo-deployer-git --save
$ hexo server -i <span class="token variable">$IP</span> -p <span class="token variable">$PORT</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
]]></content>
      
        <categories>
            
            <category> 技術 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> C9 </tag>
            
            <tag> node.js </tag>
            
        </tags>
        
    </entry>
    
  
  
    
    <entry>
      <title><![CDATA[關於我]]></title>
      <url>/about.html</url>
      <content type="html"><![CDATA[<p><img src="https://i.loli.net/2018/01/11/5a578944cbc1b.jpg" alt="Alt text" title="Tom Chen"></p>
<h2 id="我是誰"><a href="#我是誰" class="headerlink" title="我是誰"></a>我是誰</h2><p>我是Tom Chen，也可以稱呼我YTC。喜歡嘗試新事物，喜歡自由和無拘無束、不喜歡被束縛。<br>空閒時會研究認知心理、行為分析，對使用者經驗有些微研究，而本身是個愛旅遊的人，喜歡透過自助旅行來感受當地的文化氣息，去過的地方有日本和香港。</p>
<blockquote>
<p>喜歡打保齡球、射飛鏢、游泳、PC game，也是個對桌遊重度著迷的玩家<br>對英美影集、藝術史也有濃厚興趣</p>
</blockquote>
<hr>
<p>I’m Tom Chen, a software engineer and web developer. I first began my journey into code whilst studying Information management at NUTC .<br>During my final year, I juggled assignments with part time work at Exosite where I learn automated tests and develope website,I gained a considerable amount of experience from there.</p>
<hr>
<h2 id="Catch-me-if-you-can"><a href="#Catch-me-if-you-can" class="headerlink" title="Catch me if you can"></a>Catch me if you can</h2><ul>
<li>一些技術相關問題建議發郵件</li>
<li>無論通過何種方式諮詢，請務必一次性把話說清楚，否則不予理會</li>
</ul>
<blockquote>
<p><a href="http://mis.ndhu.edu.tw/docu/question.htm" target="_blank" rel="noopener">提問的智慧</a> </p>
</blockquote>
<ul>
<li>E-Mail: <a href="mailto:h5648912@gmail.com" target="_blank" rel="noopener"><code>h5648912@gmail.com</code></a></li>
</ul>
<blockquote>
<p>每天都會檢查信箱</p>
</blockquote>
<h2 id="版權說明"><a href="#版權說明" class="headerlink" title="版權說明"></a>版權說明</h2><p>除非單獨說明，任何個人或者媒體轉載本博客的原創內容，都請嚴格遵循 <a href="https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh_TW" target="_blank" rel="noopener">署名-非商業性使用-相同方式共享 4.0 未本地化版本</a> 的知識共享協議。可閱讀 <a href="/creativecommons.html">本博客的知識共享協議說明</a> 瞭解具體授權說明。</p>
<h2 id="本站存活時間"><a href="#本站存活時間" class="headerlink" title="本站存活時間"></a>本站存活時間</h2><script>function secondToDate(second){if(!second){return 0}var time=new Array(0,0,0,0,0);if(second>=365*24*3600){time[0]=parseInt(second/(365*24*3600));second%=365*24*3600}if(second>=24*3600){time[1]=parseInt(second/(24*3600));second%=24*3600}if(second>=3600){time[2]=parseInt(second/3600);second%=3600}if(second>=60){time[3]=parseInt(second/60);second%=60}if(second>0){time[4]=second}return time};function setTime(){var create_time=Math.round(new Date(Date.UTC(2017,10,15,10,23,04)).getTime()/1000);var timestamp=Math.round((new Date().getTime()+8*60*60*1000)/1000);currentTime=secondToDate((timestamp-create_time));currentTimeHtml=currentTime[0]+'年'+currentTime[1]+'天'+currentTime[2]+'時'+currentTime[3]+'分'+currentTime[4]+'秒';document.getElementById("htmer_time").innerHTML=currentTimeHtml}setInterval(setTime,1000);</script>

<p> <strong><span class="sidebar-badge" id="htmer_time"></span></strong></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Tom Chen's Blog 知識共享協議說明]]></title>
      <url>/creativecommons.html</url>
      <content type="html"><![CDATA[<h1 id="關於知識共享協議的說明"><a href="#關於知識共享協議的說明" class="headerlink" title="關於知識共享協議的說明"></a>關於知識共享協議的說明</h1><p>Yan Ting Chen（以下簡稱本人），是「Tom Chen’s blog」博客（以下簡稱本博客）的擁有者。本博客上創造和發佈的內容可用於傳播和共享，對於本人發佈的原創內容（包含圖片、文字、音樂、視頻）採用 CreativeCommons 4.0 Unported 協議，即 知識共享許可協議 4.0 未本地化版本 加以許可保護。作者在發佈內容時，如果沒有特殊註明，默認將會採用 知識共享協議 署名-非商業性使用-相同方式共享 4.0 未本地化版本 (CC BY-NC-SA 4.0 Unported) 對原創內容進行保護。</p>
<h1 id="關於知識共享協議的補充說明"><a href="#關於知識共享協議的補充說明" class="headerlink" title="關於知識共享協議的補充說明"></a>關於知識共享協議的補充說明</h1><h2 id="侵權有關"><a href="#侵權有關" class="headerlink" title="侵權有關"></a>侵權有關</h2><p>如個人或單位發現本博客上存在侵犯其自身合法權益的內容，請及時與本人取得聯繫，並提供具有法律效力的證明材料，以便本人作出處理。</p>
<h2 id="非原創作品商業使用有關"><a href="#非原創作品商業使用有關" class="headerlink" title="非原創作品商業使用有關"></a>非原創作品商業使用有關</h2><p>任何被本博客劃收錄的非原創作品，原作者依然持有商業使用其作品的權利。<br>如果您希望商業使用這些被收錄的內容，請與所有 <strong>參與此作品創作的原作者</strong> 和/或 <strong>版權持有者</strong> 進行協商。在與所有人達成協議後，方可商業使用。<br>（本博客及其本人不進行任何商業接洽工作，請自行與作者聯繫）</p>
<h1 id="CC-4-0-Unported-協議概要"><a href="#CC-4-0-Unported-協議概要" class="headerlink" title="CC 4.0 Unported 協議概要"></a>CC 4.0 Unported 協議概要</h1><h2 id="語言：中文"><a href="#語言：中文" class="headerlink" title="語言：中文"></a><a href="https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh_TW" target="_blank" rel="noopener">語言：中文</a></h2><blockquote>
<p>該<code>協議摘要</code>摘抄於Sat Jan 03 2018 20:00:02 GMT+0800 (台灣標準時間)<br>這是一份普通人可以理解的許可協議概要 (並非<a href="https://creativecommons.org/licenses/by-nc-sa/4.0/legalcodee" target="_blank" rel="noopener">授權條款</a>的替代內容 )  。</p>
</blockquote>
<p><strong>你可以自由：</strong></p>
<ul>
<li><strong>分享</strong> — 以任何媒介或格式重製及散佈本素材</li>
<li><strong>修改</strong> — 重混、轉換本素材、及依本素材建立新素材</li>
<li>只要你遵守授權條款規定，授權人不能撤回你使用本素材的自由。</li>
</ul>
<p><strong>惟需遵照下列條件：</strong></p>
<ul>
<li><strong>姓名標示</strong> — 你必須給予適當表彰、提供指向本授權條款的連結，以及 <strong> 指出（本作品的原始版本）是否已被變更。</strong> 你可以任何合理方式為前述表彰，但不得以任何方式暗示授權人為你或你的使用方式背書。</li>
<li><strong>非商業性</strong> — 你不得將本素材進行商業目的之使用。</li>
<li><strong>相同方式分享</strong> — 若你重混、轉換本素材，或依本素材建立新素材，你必須依 <strong>本素材的授權條款</strong>來散佈你的貢獻物。</li>
<li><strong>不得增加額外限制</strong> — 你不能增設法律條款或科技措施，來限制別人依授權條款本已許可的作為。</li>
</ul>
<h2 id="Language-English"><a href="#Language-English" class="headerlink" title="Language:English"></a><a href="https://creativecommons.org/licenses/by-nc-sa/4.0/deed" target="_blank" rel="noopener">Language:English</a></h2><blockquote>
<p>This copy was copied at Sat Jan 03 2018 20:00:02 GMT+0800 (Asia/Taipei)<br>This is a human-readable summary of (and not a substitute for) the license.</p>
</blockquote>
<p><strong>You are free to:</strong></p>
<ul>
<li><strong>Share</strong> — copy and redistribute the material in any medium or format</li>
<li><strong>Adapt</strong> — remix, transform, and build upon the material</li>
<li>The licensor cannot revoke these freedoms as long as you follow the license terms.</li>
</ul>
<p><strong>Under the following terms:</strong></p>
<ul>
<li><strong>Attribution</strong> — You must give appropriate credit, provide a link to the license, and indicate if changes were made. You may do so in any reasonable manner, but not in any way that suggests the licensor endorses you or your use.</li>
<li><strong>NonCommercial</strong> — You may not use the material for commercial purposes.</li>
<li><strong>ShareAlike</strong> — If you remix, transform, or build upon the material, you must distribute your contributions under the <strong>same license</strong> as the original.</li>
<li><strong>No additional restrictions</strong> — You may not apply legal terms or technological measures that legally restrict others from doing anything the license permits.</li>
</ul>
<blockquote>
<p>商業目的指的是通過使用分享來的內容用於商業活動當中或用於獲得經濟上的補償。<br>Commercial purposes refers to the use of shared content to be used in business or to obtain economic compensation.</p>
</blockquote>
<h1 id="CC-4-0-Unported-完整協議"><a href="#CC-4-0-Unported-完整協議" class="headerlink" title="CC 4.0 Unported 完整協議"></a>CC 4.0 Unported 完整協議</h1><h2 id="Language-English-1"><a href="#Language-English-1" class="headerlink" title="Language:English"></a>Language:English</h2><p><a href="https://creativecommons.org/licenses/by-nc-sa/4.0/legalcode" target="_blank" rel="noopener">CC by-nc-sa 4.0 Unported Legalcode</a></p>
<h2 id="語言：中文-1"><a href="#語言：中文-1" class="headerlink" title="語言：中文"></a>語言：中文</h2><p><a href="https://creativecommons.org/licenses/by-nc-sa/3.0/tw/legalcode" target="_blank" rel="noopener">知識共享協議姓名標示-非商業性-相同方式分享 3.0 台灣 許可協議</a></p>
<blockquote>
<p>因為4.0中文版皆還在翻譯狀態，故放上3.0協議 </p>
</blockquote>
<h1 id="您如何在不違反知識共享協議條約的基礎上使用本博客的原創內容"><a href="#您如何在不違反知識共享協議條約的基礎上使用本博客的原創內容" class="headerlink" title="您如何在不違反知識共享協議條約的基礎上使用本博客的原創內容"></a>您如何在不違反知識共享協議條約的基礎上使用本博客的原創內容</h1><h2 id="商業使用"><a href="#商業使用" class="headerlink" title="商業使用"></a>商業使用</h2><p><strong> CC 4.0 BY-NC-SA Unported</strong> 協議規定，只要他人註明本人的姓名並在以本人的作品為基礎創作的新作品上適用同一類型的許可協議，該他人就可基於非商業目的對您的作品重新編排、節選或者以本人的作品為基礎進行創作。基於本人的作品創作的所有新作品都要適用同一類型的許可協議，因此適用該項協議則對任何以您的原作為基礎創作的演繹作品自然同樣 都不得進行商業性使用。</p>
<h2 id="姓名標示"><a href="#姓名標示" class="headerlink" title="姓名標示"></a>姓名標示</h2><p>在轉載本博客中任何內容時必須給出原頁面的 URL 鏈接，並註明文章（全文，部分）從「Tom Chen’s Blog」 或轉載，並提供一個與 CC 4.0 BY-NC-SA Unported 不相違背的知識共享協議的許可證；<br>如果你對本博客的原創內容進行了修改，則必須註明修改的內容；並提供 <strong>CC 4.0 BY-NC-SA 協議</strong> 的<a href="https://creativecommons.org/choose/results-one?license_code=by-nc-sa&amp;jurisdiction=&amp;version=4.0&amp;lang=zh_TW" target="_blank" rel="noopener">許可證</a></p>
<h2 id="修改政策"><a href="#修改政策" class="headerlink" title="修改政策"></a>修改政策</h2><p>本博客屬於所有在網絡上公開發表的，任何人可訪問的作品，故本人在這裡明確聲明 <strong>所有原創內容均允許修改</strong>。</p>
<blockquote>
<p>知識共享協議中對 <em>修改</em> 的定義是：在不改變原作者的原創內容的含義和內涵的基礎上，對原創內容進行 節選、翻譯、重排版，或將原作者的原創內容作為論據和素材，或基於原作者的原創內容進行二次創作。</p>
</blockquote>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[圖庫]]></title>
      <url>//gallery.html</url>
      <content type="html"></content>
    </entry>
    
    <entry>
      <title><![CDATA[標籤]]></title>
      <url>/tags.html</url>
      <content type="html"></content>
    </entry>
    
    <entry>
      <title><![CDATA[「時間軸」]]></title>
      <url>/timeline.html</url>
      <content type="html"></content>
    </entry>
    
  
</search>
